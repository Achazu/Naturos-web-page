.popup {
	height: 100vh;
	width: 100vw;
	background-color: rgba($color-black, 0.8);
	position: fixed;
	top: 0;
	left: 0;
	z-index: 9999;
	
	opacity: 0;
	visibility: hidden;
	transition: all .5s;

	&__content {
		@include centerIt;

		width: 75%;
		background-color: $color-white;
		box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
		border-radius: 3px;
		// we want to have two photos one under another, for this we specify
		// display table for the parent and display table-cell for children
		display: table;
		overflow: hidden;
		opacity: 0;
		// we cant have two transforms in one declaration (one is hidden in the mixin)
		// in order to fix it we have to repeat first transform in the new one
		transform: translate(-50%, -50%) scale(.25);
		transition: all .5s .2s;
		
		@include respond(tab-port){
			display: block;
		}
	}

	&__left {
		width: 33.3333333%;
		// float: left;
		display: table-cell;
	}

	&__right {
		width: 66.6666667%;
		// float: left;
		display: table-cell;
		vertical-align: middle;		
		padding: 3rem 5rem;
		@include respond(tab-port){
			width: 100%;
			display: block;			
			padding-bottom: 4rem;
		}
	}

	&__img {
		display: block;
		width: 100%;

		@include respond(tab-land){
			height: 30rem;
			width: 50%;
			float: left;
			object-fit: cover;
			margin-bottom: 2rem;
		}
		@include respond(phone){
			height: auto;
			max-height: 14rem;
			display: block;	
			float: left;		
		}
	}

	&__text {
		font-size: 1.4rem;
		margin-bottom: 4rem;
// creates two column text instead of one column
		column-count: 2;
		column-gap: 4rem;
		column-rule: 1px solid $color-grey-dark-2;
// sets where sentences can be broken down. requires lang attribute in the html
		hyphens: auto;
	}


// open states
	&:target {
		opacity: 1;
		visibility: visible;
	}

	&:target &__content {
		opacity: 1;
        transform: translate(-50%, -50%) scale(1);
	}

	&__close {
		&:link,
		&:visited {
			color: $color-grey-dark;
			position: absolute;
			top: 2.5rem;
			right: 2.5rem;
			font-size: 3rem;
			text-decoration: none;
			display: inline-block;
			transition: all .2s;
			line-height: 1;
		}
		&:hover {
			color: $color-primary;
		}
	}
}